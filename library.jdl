entity Book {
    title String required,
    isDeleted Boolean,
}

entity Author {
    firstName String required,
    lastName String required,
    isDeleted Boolean,
}

entity Category {
    name String required,
    isDeleted Boolean,
}

entity Publisher {
    name String required,
    isDeleted Boolean,
}

entity BookCopy {
    isDeleted Boolean,
}

entity Checkout {
    startTime Instant,
    endTime Instant,
    isReturned Boolean,
}

entity Reservation {
    startTime Instant,
    endTime Instant,
}

enum Type {
    AVAILABLE,
    RETURN
}

entity Notification {
    sentAt Instant,
    type Type,
}

entity Queue {
    createdAt Instant,
}

relationship ManyToMany {
    Book{author(firstName)} to Author{book(title)}
    Book{category(name)} to Category{book(title)}
}

relationship ManyToOne {
    Checkout{user(login)} to User,
    Checkout{bookCopy} to BookCopy,
    Reservation{user(login)} to User,
    Reservation{bookCopy} to BookCopy,
    Notification{user(login)} to User,
    Notification{bookCopy} to BookCopy,
    Queue{user(login)} to User,
    Queue{book(title)} to Book,
    BookCopy{book(title)} to Book,
    Book{publisher(name)} to Publisher,
}

use mapstruct, serviceClass, pagination for all
